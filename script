#!/bin/bash

readonly SUBCOMMAND_PREFIX="subcommand"
readonly DESCRIPTION_PREFIX="desc"
readonly HELP_PREFIX="help"

function _main() {
  readonly SUBCOMMAND="$(echo "$1" | tr "-" "_")"

  if [[ -z "$SUBCOMMAND" ]] ; then
    _usage
    exit
  fi

  if ! type "${SUBCOMMAND_PREFIX}_${SUBCOMMAND}" &>/dev/null ; then
    _usage
    exit 1
  fi

  shift
  eval "${SUBCOMMAND_PREFIX}_${SUBCOMMAND} $@"
  exit $!
}

function _usage() {
  cat <<USAGE >&2

  ./$(basename "$0") - one script to rule them all

$(_subcommands)

USAGE
}


function _subcommands() {
 echo -e "subcommands:\n"

 for cmd in $(_cmd_list) ; do
   printf "  $cmd" | tr "_" "-"
   if type "${DESCRIPTION_PREFIX}_${cmd}" &>/dev/null ; then
     printf " $("${DESCRIPTION_PREFIX}_${cmd}")"
   fi
   echo
 done
}

function _cmd_list() {
  compgen -A function | \
    grep -vE "^_.*" | \
    grep "${SUBCOMMAND_PREFIX}" | \
    awk "/^${SUBCOMMAND_PREFIX}_\./{print;next}{sub(/^${SUBCOMMAND_PREFIX}_/,\"\",\$1);print}"
}

# help
function desc_help() { echo "<subcommand> - print help text for subcommand" ; }
function subcommand_help() {
  local subcommand="$(echo "$1" | tr "-" "_")"
  if type "${HELP_PREFIX}_${subcommand}" &>/dev/null ; then
    eval "${HELP_PREFIX}_${subcommand}"
  else
    echo "no help text available for subcommand \"$subcommand\""
  fi
}

# -h
function desc__h() { echo "- display help text and exit" ; }
function help__h() { cat <<HELP
This is example help text for the "-h/--help" commands.
HELP
}
function subcommand__h() {
  _usage
}

# --help
function desc___help() { desc__h ; }
function help___help() { help__h ; }
function subcommand___help() { subcommand__h ; }

_main "$@" # this line must always be last
